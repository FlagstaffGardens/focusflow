# Simple, single-stage build that WORKS
FROM node:20-alpine

# Install pnpm
RUN corepack enable && corepack prepare pnpm@8 --activate

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml* pnpm-workspace.yaml ./
COPY apps/web/package.json ./apps/web/
COPY packages/pipeline/package.json ./packages/pipeline/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build pipeline package and Next.js app
RUN pnpm -r build

# Create data directory
RUN mkdir -p /data

# CRITICAL: Runtime environment variables, NOT build time!
# These are evaluated when container starts, not when building
ENV NODE_ENV=production
ENV DATA_DIR=/data

# Single PORT for deployment simplicity
ENV PORT=8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start the app - Next.js handles everything
CMD ["pnpm", "--filter", "@focusflow/web", "start"]